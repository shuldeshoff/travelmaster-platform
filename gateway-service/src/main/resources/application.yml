spring:
  application:
    name: gateway-service
  
  cloud:
    gateway:
      routes:
        # User Service
        - id: user-service
          uri: http://localhost:8081
          predicates:
            - Path=/api/v1/auth/**,/api/v1/users/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                key-resolver: "#{@ipKeyResolver}"
        
        # Trip Service (для будущего)
        - id: trip-service
          uri: http://localhost:8082
          predicates:
            - Path=/api/v1/trips/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 40
                key-resolver: "#{@userKeyResolver}"
        
        # Booking Service (для будущего)
        - id: booking-service
          uri: http://localhost:8083
          predicates:
            - Path=/api/v1/bookings/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 15
                redis-rate-limiter.burstCapacity: 30
                key-resolver: "#{@userKeyResolver}"
        
        # Payment Service (для будущего)
        - id: payment-service
          uri: http://localhost:8084
          predicates:
            - Path=/api/v1/payments/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                key-resolver: "#{@userKeyResolver}"
        
        # Analytics Service (для будущего)
        - id: analytics-service
          uri: http://localhost:8086
          predicates:
            - Path=/api/v1/analytics/**
      
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:3000"
              - "http://localhost:4200"
              - "https://app.travelmaster.com"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
              - PATCH
            allowedHeaders: "*"
            allowCredentials: true
            maxAge: 3600
  
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics,gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

jwt:
  secret: travelmaster-super-secret-jwt-key-minimum-512-bits-hs512-algorithm-requires-this-length

logging:
  level:
    root: INFO
    com.travelmaster: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

